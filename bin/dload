#!/usr/bin/env ruby

def score_name filename
  filename.sub(/.*\//, '').gsub(/%../, '_')
end

def dedupe_name oldname
  prefix = 'a'
  newname = oldname

  while File.exist? newname do
    newname = prefix.concat '.', oldname
    prefix.next!
  end

  newname
end

if $0.eql? __FILE__
  if ARGV.first.nil? or ARGV.first.match? /^(-h|-?-help|help)$/
    puts "USAGE: $0 <URI>"
    puts
    puts '    Download the file at URI.  If a file with that name already'
    puts '    exists, prepend a short alphanumeric code to the filename so it'
    puts '    does not clobber the existing file.  "Short" is relative,'
    puts '    depending on the number of similarly-named files you have in the'
    puts '    download destination directory.  For the convenience of many'
    puts '    terminal environments, dload also replaces % character entities in'
    puts '    the URI with underscores.'
  else
    ARGV.each do |arg|
      String.new do |fname|
        score_name(arg).tap do |original|
          fname = dedupe_name original
        end
      end
    end
  end
end
